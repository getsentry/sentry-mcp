diff --git a/dist/mcp/index.js b/dist/mcp/index.js
index 74f0557ad2782a89adb89e0f0caf4f2f45ff36f8..eff5995b9da0d5c3d4a57da5ae598f598852e63f 100644
--- a/dist/mcp/index.js
+++ b/dist/mcp/index.js
@@ -126,7 +126,7 @@ var McpAgent = class _McpAgent extends DurableObject {
         return self.onMessage(connection, message);
       }
     }, _a.options = {
-      hibernate: true
+      hibernate: false
     }, _a)(ctx, env);
   }
   get mcp() {
@@ -159,7 +159,7 @@ var McpAgent = class _McpAgent extends DurableObject {
         return self.onMessage(connection, event);
       }
     }, _a.options = {
-      hibernate: true
+      hibernate: false
     }, _a)(this.ctx, this.env);
     this.props = await this.ctx.storage.get("props");
     this._transportType = await this.ctx.storage.get(
diff --git a/src/index.ts b/src/index.ts
index dbf92b18332c7f2c062fa572b72b68ead4374bec..5bdf7ac897e4ee27fe809e0a59ec940e7724caf7 100644
--- a/src/index.ts
+++ b/src/index.ts
@@ -313,7 +313,7 @@ export class Agent<Env, State = unknown> extends Server<Env> {
    */
   static options = {
     /** Whether the Agent should hibernate when inactive */
-    hibernate: true, // default to hibernate
+    hibernate: false, // default to hibernate
   };
 
   /**
@@ -831,9 +831,9 @@ export class Agent<Env, State = unknown> extends Server<Env> {
   private async _scheduleNextAlarm() {
     // Find the next schedule that needs to be executed
     const result = this.sql`
-      SELECT time FROM cf_agents_schedules 
+      SELECT time FROM cf_agents_schedules
       WHERE time > ${Math.floor(Date.now() / 1000)}
-      ORDER BY time ASC 
+      ORDER BY time ASC
       LIMIT 1
     `;
     if (!result) return;
