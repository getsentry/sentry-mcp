#!/usr/bin/env tsx

/**
 * Generates a TypeScript module containing all OpenTelemetry namespace data
 * This allows the data to be bundled at build time for Cloudflare Workers compatibility
 */

import { readFileSync, readdirSync, writeFileSync } from "node:fs";
import { resolve, dirname } from "node:path";
import { fileURLToPath } from "node:url";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const DATA_DIR = resolve(__dirname, "../src/tools/search-events/tools/data");
const OUTPUT_PATH = resolve(DATA_DIR, "otel-data-bundle.ts");

function generateBundle() {
  console.log(
    "ðŸ“¦ Generating OpenTelemetry data bundle for Cloudflare Workers...",
  );

  const files = readdirSync(DATA_DIR).filter(
    (f) => f.endsWith(".json") && !f.startsWith("__"),
  );

  const imports: string[] = [];
  const exports: string[] = [];

  // Generate import statements for each JSON file
  for (const file of files) {
    const baseName = file.replace(".json", "");
    const varName = baseName.replace(/-/g, "_");
    imports.push(`import ${varName}Data from "./${file}";`);
    exports.push(`  "${baseName}": ${varName}Data,`);
  }

  // Generate the TypeScript module
  const content = `// Auto-generated file - DO NOT EDIT
// Generated by generate-otel-data-bundle.ts

${imports.join("\n")}

// Bundle all namespace data for Cloudflare Workers compatibility
export const namespaceDataBundle = {
${exports.join("\n")}
};

// Index data
import indexData from "./__namespaces.json";
export const namespacesIndex = indexData;

export type NamespaceData = {
  namespace: string;
  description: string;
  attributes: Record<string, {
    description: string;
    type: string;
    examples?: string[];
    note?: string;
    stability?: string;
  }>;
  custom?: boolean;
};

export type NamespacesIndex = {
  generated: string;
  totalNamespaces: number;
  namespaces: Array<{
    namespace: string;
    description: string;
    custom?: boolean;
  }>;
};
`;

  writeFileSync(OUTPUT_PATH, content);
  console.log(`âœ… Generated bundle at: ${OUTPUT_PATH}`);
  console.log(`ðŸ“Š Bundled ${files.length} namespace files`);
}

generateBundle();
