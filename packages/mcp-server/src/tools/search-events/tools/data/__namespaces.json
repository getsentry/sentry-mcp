{
  "generated": "2025-07-16T18:48:46.692Z",
  "totalNamespaces": 73,
  "namespaces": [
    {
      "namespace": "android",
      "description": "The Android platform on which the Android application is running.\n"
    },
    {
      "namespace": "app",
      "description": "Describes attributes related to client-side applications (e.g. web apps or mobile apps).\n"
    },
    {
      "namespace": "artifact",
      "description": "This group describes attributes specific to artifacts. Artifacts are files or other immutable objects that are intended for distribution. This definition aligns directly with the [SLSA](https://slsa.dev/spec/v1.0/terminology#package-model) package model.\n"
    },
    {
      "namespace": "aspnetcore",
      "description": "ASP.NET Core attributes"
    },
    {
      "namespace": "aws",
      "description": "This section defines generic attributes for AWS services.\n"
    },
    {
      "namespace": "azure",
      "description": "This section defines generic attributes used by Azure Client Libraries.\n"
    },
    {
      "namespace": "browser",
      "description": "The web browser attributes\n"
    },
    {
      "namespace": "cassandra",
      "description": "This section defines attributes for Cassandra.\n"
    },
    {
      "namespace": "cicd",
      "description": "This group describes attributes specific to pipelines within a Continuous Integration and Continuous Deployment (CI/CD) system. A [pipeline](https://wikipedia.org/wiki/Pipeline_(computing)) in this case is a series of steps that are performed in order to deliver a new version of software. This aligns with the [Britannica](https://www.britannica.com/dictionary/pipeline) definition of a pipeline where a **pipeline** is the system for developing and producing something. In the context of CI/CD, a pipeline produces or delivers software.\n"
    },
    {
      "namespace": "client",
      "description": "These attributes may be used to describe the client in a connection-based network interaction where there is one side that initiates the connection (the client is the side that initiates the connection). This covers all TCP network interactions since TCP is connection-based and one side initiates the connection (an exception is made for peer-to-peer communication over TCP where the \"user-facing\" surface of the protocol / API doesn't expose a clear notion of client and server). This also covers UDP network interactions where one side initiates the interaction, e.g. QUIC (HTTP/3) and DNS.\n"
    },
    {
      "namespace": "cloud",
      "description": "A cloud environment (e.g. GCP, Azure, AWS).\n"
    },
    {
      "namespace": "cloudevents",
      "description": "This document defines attributes for CloudEvents.\n"
    },
    {
      "namespace": "cloudfoundry",
      "description": "CloudFoundry resource attributes.\n"
    },
    {
      "namespace": "code",
      "description": "These attributes provide context about source code\n"
    },
    {
      "namespace": "container",
      "description": "A container instance.\n"
    },
    {
      "namespace": "cpu",
      "description": "Attributes specific to a cpu instance."
    },
    {
      "namespace": "cpython",
      "description": "This document defines CPython related attributes.\n"
    },
    {
      "namespace": "database",
      "description": "This group defines the attributes used to describe telemetry in the context of databases.\n"
    },
    {
      "namespace": "db",
      "description": "Database operations attributes"
    },
    {
      "namespace": "deployment",
      "description": "This document defines attributes for software deployments.\n"
    },
    {
      "namespace": "destination",
      "description": "These attributes may be used to describe the receiver of a network exchange/packet. These should be used when there is no client/server relationship between the two sides, or when that relationship is unknown. This covers low-level network interactions (e.g. packet tracing) where you don't know if there was a connection or which side initiated it. This also covers unidirectional UDP flows and peer-to-peer communication where the \"user-facing\" surface of the protocol / API doesn't expose a clear notion of client and server.\n"
    },
    {
      "namespace": "device",
      "description": "Describes device attributes.\n"
    },
    {
      "namespace": "disk",
      "description": "These attributes may be used for any disk related operation.\n"
    },
    {
      "namespace": "dns",
      "description": "This document defines the shared attributes used to report a DNS query.\n"
    },
    {
      "namespace": "dotnet",
      "description": "This document defines .NET related attributes.\n"
    },
    {
      "namespace": "elasticsearch",
      "description": "This section defines attributes for Elasticsearch.\n"
    },
    {
      "namespace": "enduser",
      "description": "Describes the end user.\n"
    },
    {
      "namespace": "error",
      "description": "This document defines the shared attributes used to report an error.\n"
    },
    {
      "namespace": "faas",
      "description": "FaaS attributes"
    },
    {
      "namespace": "feature_flags",
      "description": "This document defines attributes for Feature Flags.\n"
    },
    {
      "namespace": "file",
      "description": "Describes file attributes."
    },
    {
      "namespace": "gcp",
      "description": "Attributes for Google Cloud client libraries.\n"
    },
    {
      "namespace": "gen_ai",
      "description": "This document defines the attributes used to describe telemetry in the context of Generative Artificial Intelligence (GenAI) Models requests and responses.\n"
    },
    {
      "namespace": "geo",
      "description": "Geo fields can carry data about a specific location related to an event. This geolocation information can be derived from techniques such as Geo IP, or be user-supplied.\nNote: Geo attributes are typically used under another namespace, such as client.* and describe the location of the corresponding entity (device, end-user, etc). Semantic conventions that reference geo attributes (as a root namespace) or embed them (under their own namespace) SHOULD document what geo attributes describe in the scope of that convention.\n"
    },
    {
      "namespace": "go",
      "description": "This document defines Go related attributes.\n"
    },
    {
      "namespace": "graphql",
      "description": "This document defines attributes for GraphQL."
    },
    {
      "namespace": "hardware",
      "description": "Attributes for hardware.\n"
    },
    {
      "namespace": "heroku",
      "description": "This document defines attributes for the Heroku platform on which application/s are running.\n"
    },
    {
      "namespace": "host",
      "description": "A host is defined as a computing instance. For example, physical servers, virtual machines, switches or disk array.\n"
    },
    {
      "namespace": "http",
      "description": "This document defines semantic convention attributes in the HTTP namespace."
    },
    {
      "namespace": "ios",
      "description": "This group describes iOS-specific attributes.\n"
    },
    {
      "namespace": "jvm",
      "description": "This document defines Java Virtual machine related attributes.\n"
    },
    {
      "namespace": "k8s",
      "description": "Kubernetes resource attributes.\n"
    },
    {
      "namespace": "linux",
      "description": "Describes Linux Memory attributes"
    },
    {
      "namespace": "log",
      "description": "This document defines log attributes\n"
    },
    {
      "namespace": "mcp",
      "description": "Model Context Protocol attributes for MCP tool calls and sessions",
      "custom": true
    },
    {
      "namespace": "messaging",
      "description": "Attributes describing telemetry around messaging systems and messaging activities."
    },
    {
      "namespace": "network",
      "description": "These attributes may be used for any network related operation.\n"
    },
    {
      "namespace": "nodejs",
      "description": "Describes Node.js related attributes."
    },
    {
      "namespace": "oci",
      "description": "An OCI image manifest.\n"
    },
    {
      "namespace": "opentracing",
      "description": "Attributes used by the OpenTracing Shim layer."
    },
    {
      "namespace": "os",
      "description": "The operating system (OS) on which the process represented by this resource is running.\n"
    },
    {
      "namespace": "otel",
      "description": "Attributes reserved for OpenTelemetry"
    },
    {
      "namespace": "peer",
      "description": "Operations that access some remote service.\n"
    },
    {
      "namespace": "process",
      "description": "An operating system process.\n"
    },
    {
      "namespace": "profile",
      "description": "Describes the origin of a single frame in a Profile.\n"
    },
    {
      "namespace": "rpc",
      "description": "This document defines attributes for remote procedure calls."
    },
    {
      "namespace": "server",
      "description": "These attributes may be used to describe the server in a connection-based network interaction where there is one side that initiates the connection (the client is the side that initiates the connection). This covers all TCP network interactions since TCP is connection-based and one side initiates the connection (an exception is made for peer-to-peer communication over TCP where the \"user-facing\" surface of the protocol / API doesn't expose a clear notion of client and server). This also covers UDP network interactions where one side initiates the interaction, e.g. QUIC (HTTP/3) and DNS.\n"
    },
    {
      "namespace": "service",
      "description": "A service instance.\n"
    },
    {
      "namespace": "session",
      "description": "Session is defined as the period of time encompassing all activities performed by the application and the actions executed by the end user.\nConsequently, a Session is represented as a collection of Logs, Events, and Spans emitted by the Client Application throughout the Session's duration. Each Session is assigned a unique identifier, which is included as an attribute in the Logs, Events, and Spans generated during the Session's lifecycle.\nWhen a session reaches end of life, typically due to user inactivity or session timeout, a new session identifier will be assigned. The previous session identifier may be provided by the instrumentation so that telemetry backends can link the two sessions.\n"
    },
    {
      "namespace": "signalr",
      "description": "SignalR attributes"
    },
    {
      "namespace": "source",
      "description": "These attributes may be used to describe the sender of a network exchange/packet. These should be used when there is no client/server relationship between the two sides, or when that relationship is unknown. This covers low-level network interactions (e.g. packet tracing) where you don't know if there was a connection or which side initiated it. This also covers unidirectional UDP flows and peer-to-peer communication where the \"user-facing\" surface of the protocol / API doesn't expose a clear notion of client and server.\n"
    },
    {
      "namespace": "system",
      "description": "Describes System attributes"
    },
    {
      "namespace": "telemetry",
      "description": "This document defines attributes for telemetry SDK.\n"
    },
    {
      "namespace": "test",
      "description": "This group describes attributes specific to [software tests](https://wikipedia.org/wiki/Software_testing).\n"
    },
    {
      "namespace": "thread",
      "description": "These attributes may be used for any operation to store information about a thread that started a span.\n"
    },
    {
      "namespace": "tls",
      "description": "This document defines semantic convention attributes in the TLS namespace."
    },
    {
      "namespace": "url",
      "description": "Attributes describing URL."
    },
    {
      "namespace": "user",
      "description": "Describes information about the user."
    },
    {
      "namespace": "v8js",
      "description": "Describes V8 JS Engine Runtime related attributes."
    },
    {
      "namespace": "vcs",
      "description": "This group defines the attributes for [Version Control Systems (VCS)](https://wikipedia.org/wiki/Version_control).\n"
    },
    {
      "namespace": "webengine",
      "description": "This document defines the attributes used to describe the packaged software running the application code.\n"
    },
    {
      "namespace": "zos",
      "description": "This document defines attributes of a z/OS resource.\n"
    }
  ]
}
