{
  "namespace": "container",
  "description": "A container instance.\n",
  "attributes": {
    "container.name": {
      "description": "Container name used by container runtime.\n",
      "type": "string",
      "stability": "development",
      "examples": ["opentelemetry-autoconf"]
    },
    "container.id": {
      "description": "Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/containers/run/#container-identification). The UUID might be abbreviated.\n",
      "type": "string",
      "stability": "development",
      "examples": ["a3bf90e006b2"]
    },
    "container.runtime": {
      "description": "The container runtime managing this container.\n",
      "type": "string",
      "stability": "development",
      "examples": ["docker", "containerd", "rkt"]
    },
    "container.image.name": {
      "description": "Name of the image the container was built on.\n",
      "type": "string",
      "stability": "development",
      "examples": ["gcr.io/opentelemetry/operator"]
    },
    "container.image.tags": {
      "description": "Container image tags. An example can be found in [Docker Image Inspect](https://docs.docker.com/engine/api/v1.43/#tag/Image/operation/ImageInspect). Should be only the `<tag>` section of the full name for example from `registry.example.com/my-org/my-image:<tag>`.\n",
      "type": "string",
      "stability": "development",
      "examples": ["[\"v1.27.1\",\"3.5.7-0\"]"]
    },
    "container.image.id": {
      "description": "Runtime specific image identifier. Usually a hash algorithm followed by a UUID.\n",
      "type": "string",
      "note": "Docker defines a sha256 of the image id; `container.image.id` corresponds to the `Image` field from the Docker container inspect [API](https://docs.docker.com/engine/api/v1.43/#tag/Container/operation/ContainerInspect) endpoint.\nK8s defines a link to the container registry repository with digest `\"imageID\": \"registry.azurecr.io /namespace/service/dockerfile@sha256:bdeabd40c3a8a492eaf9e8e44d0ebbb84bac7ee25ac0cf8a7159d25f62555625\"`.\nThe ID is assigned by the container runtime and can vary in different environments. Consider using `oci.manifest.digest` if it is important to identify the same image in different environments/runtimes.\n",
      "stability": "development",
      "examples": [
        "sha256:19c92d0a00d1b66d897bceaa7319bee0dd38a10a851c60bcec9474aa3f01e50f"
      ]
    },
    "container.image.repo_digests": {
      "description": "Repo digests of the container image as provided by the container runtime.\n",
      "type": "string",
      "note": "[Docker](https://docs.docker.com/engine/api/v1.43/#tag/Image/operation/ImageInspect) and [CRI](https://github.com/kubernetes/cri-api/blob/c75ef5b473bbe2d0a4fc92f82235efd665ea8e9f/pkg/apis/runtime/v1/api.proto#L1237-L1238) report those under the `RepoDigests` field.\n",
      "stability": "development",
      "examples": [
        "[\"example@sha256:afcc7f1ac1b49db317a7196c902e61c6c3c4607d63599ee1a82d702d249a0ccb\",\"internal.registry.example.com:5000/example@sha256:b69959407d21e8a062e0416bf13405bb2b71ed7a84dde4158ebafacfa06f5578\"]"
      ]
    },
    "container.command": {
      "description": "The command used to run the container (i.e. the command name).\n",
      "type": "string",
      "note": "If using embedded credentials or sensitive data, it is recommended to remove them to prevent potential leakage.\n",
      "stability": "development",
      "examples": ["otelcontribcol"]
    },
    "container.command_line": {
      "description": "The full command run by the container as a single string representing the full command.\n",
      "type": "string",
      "stability": "development",
      "examples": ["otelcontribcol --config config.yaml"]
    },
    "container.command_args": {
      "description": "All the command arguments (including the command/executable itself) run by the container.\n",
      "type": "string",
      "stability": "development",
      "examples": ["[\"otelcontribcol\",\"--config\",\"config.yaml\"]"]
    },
    "container.label": {
      "description": "Container labels, `<key>` being the label name, the value being the label value.\n",
      "type": "string",
      "note": "For example, a docker container label `app` with value `nginx` SHOULD be recorded as the `container.label.app` attribute with value `\"nginx\"`.\n",
      "stability": "development",
      "examples": ["nginx"]
    },
    "container.csi.plugin.name": {
      "description": "The name of the CSI ([Container Storage Interface](https://github.com/container-storage-interface/spec)) plugin used by the volume.\n",
      "type": "string",
      "note": "This can sometimes be referred to as a \"driver\" in CSI implementations. This should represent the `name` field of the GetPluginInfo RPC.\n",
      "stability": "development",
      "examples": ["pd.csi.storage.gke.io"]
    },
    "container.csi.volume.id": {
      "description": "The unique volume ID returned by the CSI ([Container Storage Interface](https://github.com/container-storage-interface/spec)) plugin.\n",
      "type": "string",
      "note": "This can sometimes be referred to as a \"volume handle\" in CSI implementations. This should represent the `Volume.volume_id` field in CSI spec.\n",
      "stability": "development",
      "examples": [
        "projects/my-gcp-project/zones/my-gcp-zone/disks/my-gcp-disk"
      ]
    }
  }
}
