name: Preview Deploy & Test

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  statuses: write  # Required for creating commit statuses

jobs:
  preview:
    name: Deploy Preview & Run Tests
    runs-on: ubuntu-latest
    environment: Actions
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # pnpm/action-setup@v4
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda
        name: Install pnpm
        with:
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Generate Worker Name
        id: env_name
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          WORKER_NAME=$(./scripts/generate-worker-name.sh "$BRANCH_NAME")
          
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "worker_name=$WORKER_NAME" >> $GITHUB_OUTPUT
          echo "Preview worker name: $WORKER_NAME"

      - name: Deploy Preview Environment
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: packages/mcp-cloudflare
          command: deploy --name ${{ steps.env_name.outputs.worker_name }}
          packageManager: pnpm

      - name: Generate Preview URL
        id: preview_url
        run: |
          # Construct preview URL
          # With --name flag, wrangler creates: <worker-name>.<subdomain>.workers.dev
          WORKER_NAME="${{ steps.env_name.outputs.worker_name }}"
          SUBDOMAIN="getsentry"
          PREVIEW_URL="https://${WORKER_NAME}.${SUBDOMAIN}.workers.dev"
          
          echo "url=$PREVIEW_URL" >> $GITHUB_OUTPUT
          echo "Preview URL: $PREVIEW_URL"

      - name: Set Commit Status
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const deploySuccess = '${{ steps.deploy.outcome }}' === 'success';
            const previewUrl = '${{ steps.preview_url.outputs.url }}';
            const workerName = '${{ steps.env_name.outputs.worker_name }}';
            
            let state, description;
            if (!deploySuccess) {
              state = 'failure';
              description = 'Deployment failed';
            } else {
              state = 'success';
              description = `Preview: ${workerName}`;
            }
            
            try {
              await github.rest.repos.createCommitStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha: context.payload.pull_request.head.sha,
                state: state,
                target_url: deploySuccess ? previewUrl : `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
                description: description,
                context: 'Preview Deploy'
              });
            } catch (error) {
              console.error('Failed to create commit status:', error);
              // Don't fail the workflow if status update fails
            }
            
      - name: Wait for deployment to propagate
        if: success()
        run: |
          echo "Waiting for deployment to propagate..."
          sleep 30

      - name: Run Smoke Tests
        id: smoke_tests
        if: success()
        working-directory: packages/smoke-tests
        env:
          PREVIEW_URL: ${{ steps.preview_url.outputs.url }}
        run: |
          echo "Running smoke tests against $PREVIEW_URL"
          pnpm test

      - name: Update Commit Status with Test Results
        if: always() && steps.deploy.outcome == 'success'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const testsSuccess = '${{ steps.smoke_tests.outcome }}' === 'success';
            const previewUrl = '${{ steps.preview_url.outputs.url }}';
            
            let state = testsSuccess ? 'success' : 'failure';
            let description = testsSuccess ? 'All tests passed' : 'Some tests failed';
            
            try {
              await github.rest.repos.createCommitStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha: context.payload.pull_request.head.sha,
                state: state,
                target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
                description: description,
                context: 'Smoke Tests'
              });
            } catch (error) {
              console.error('Failed to create commit status:', error);
            }