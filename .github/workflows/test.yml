name: Test

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # pnpm/action-setup@v4
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda
        name: Install pnpm
        with:
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Find agents package location
        run: |
          echo "=== FINDING AGENTS PACKAGE ==="
          
          echo "1. Finding all agents directories:"
          find . -name "agents" -type d 2>/dev/null | head -10
          
          echo "2. Finding agents package.json files:"
          find . -name "package.json" -path "*/agents/*" 2>/dev/null | head -5
          
          echo "3. Checking if agents is in pnpm store:"
          find $(pnpm store path) -name "agents" -type d 2>/dev/null | head -5
          
          echo "4. Checking pnpm list for agents:"
          pnpm list --depth=0 --json | jq -r '.[] | select(.dependencies.agents) | {name: .name, agents: .dependencies.agents}'
          
          echo "5. Looking for agents in all node_modules:"
          find . -path "*/node_modules/agents/package.json" 2>/dev/null | head -5
          
          echo "6. Checking the specific expected location:"
          ls -la packages/mcp-cloudflare/node_modules/ | grep agents || echo "agents not found in mcp-cloudflare/node_modules"
          
          echo "7. Check if agents is hoisted to root:"
          ls -la node_modules/ | grep agents || echo "agents not found in root node_modules"

      - name: Check patch configuration format
        run: |
          echo "=== PATCH CONFIGURATION CHECK ==="
          
          echo "1. Full pnpm section from package.json:"
          jq -r '.pnpm' package.json
          
          echo "2. Check if agents is in pnpm-lock.yaml:"
          grep -A 5 -B 5 "agents" pnpm-lock.yaml | head -20
          
          echo "3. Check patch file format:"
          echo "First 20 lines of patch file:"
          head -20 patches/agents.patch
          
          echo "4. Check if patch references correct version:"
          grep -E "^(index|@@|\+\+\+|---)" patches/agents.patch | head -5

      - name: Run build
        run: pnpm build

      - name: Run linter
        run: pnpm lint

      - name: Run tests
        run: pnpm test:ci

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          flags: unittests
          name: codecov-unittests
          fail_ci_if_error: false

      - name: Upload results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@cf701569b05ccdd861a76b8607a66d76f6fd4857
        if: ${{ !cancelled() }}
        with:
          report_paths: "**/*.junit.xml"
          comment: false
