name: Test

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # pnpm/action-setup@v4
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda
        name: Install pnpm
        with:
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Enhanced patch debugging
        run: |
          echo "=== COMPREHENSIVE PATCH DEBUG ==="
          
          echo "1. pnpm configuration:"
          pnpm config list
          
          echo "2. Workspace info:"
          pnpm list --depth=0 --json | jq -r '.[] | select(.name == "@sentry/mcp-cloudflare") | .dependencies.agents'
          
          echo "3. Check if agents is patched:"
          pnpm list --depth=0 --json | jq -r '.[] | select(.dependencies.agents) | .dependencies.agents'
          
          echo "4. Patch file hash:"
          if [ -f "patches/agents.patch" ]; then
            sha256sum patches/agents.patch
          fi
          
          echo "5. Direct file check:"
          find packages/mcp-cloudflare/node_modules -name "package.json" -path "*/agents/*" -exec cat {} \; | grep version
          
          echo "6. Test applying patch manually:"
          cd packages/mcp-cloudflare/node_modules/agents
          patch --dry-run -p1 < ../../../../../patches/agents.patch
          cd ../../../../../

      - name: Run build
        run: pnpm build

      - name: Run linter
        run: pnpm lint

      - name: Run tests
        run: pnpm test:ci

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          flags: unittests
          name: codecov-unittests
          fail_ci_if_error: false

      - name: Upload results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@cf701569b05ccdd861a76b8607a66d76f6fd4857
        if: ${{ !cancelled() }}
        with:
          report_paths: "**/*.junit.xml"
          comment: false
