name: Test

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # pnpm/action-setup@v4
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda
        name: Install pnpm
        with:
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Validate agents patch applied to mcp-cloudflare
        run: |
          echo "üîç Checking if mcp-cloudflare is using patched agents..."
          
          # 1. Check if mcp-cloudflare has agents as a symlink
          if [ -L "packages/mcp-cloudflare/node_modules/agents" ]; then
            echo "‚úÖ agents is a symlink in mcp-cloudflare (expected with pnpm)"
            
            # 2. Get the actual symlink target
            SYMLINK_TARGET=$(readlink packages/mcp-cloudflare/node_modules/agents)
            echo "Symlink target: $SYMLINK_TARGET"
            
            # 3. Check if the target contains patch_hash (proof of patch)
            if echo "$SYMLINK_TARGET" | grep -q "patch_hash"; then
              echo "‚úÖ mcp-cloudflare is using PATCHED agents!"
              echo "Patch hash found in path: $(echo "$SYMLINK_TARGET" | grep -o 'patch_hash=[^_]*')"
              
              # 4. Verify the actual hibernation setting
              REAL_AGENTS_PATH=$(readlink -f packages/mcp-cloudflare/node_modules/agents/src/index.ts)
              if grep -q "hibernate: false" "$REAL_AGENTS_PATH"; then
                echo "‚úÖ Hibernation is correctly set to FALSE"
                echo "Configuration:"
                grep -A 1 -B 1 "hibernate: false" "$REAL_AGENTS_PATH"
              else
                echo "‚ùå Hibernation setting not found or incorrect"
                exit 1
              fi
              
            else
              echo "‚ùå mcp-cloudflare is using UNPATCHED agents (no patch_hash in path)"
              echo "Target: $SYMLINK_TARGET"
              exit 1
            fi
            
          else
            echo "‚ùå agents not found or not a symlink in mcp-cloudflare"
            ls -la packages/mcp-cloudflare/node_modules/ | grep agents || echo "No agents found"
            exit 1
          fi
          
          echo "üéâ mcp-cloudflare patch validation successful!"
      
      - name: Run build
        run: pnpm build

      - name: Run linter
        run: pnpm lint

      - name: Run tests
        run: pnpm test:ci

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          flags: unittests
          name: codecov-unittests
          fail_ci_if_error: false

      - name: Upload results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@cf701569b05ccdd861a76b8607a66d76f6fd4857
        if: ${{ !cancelled() }}
        with:
          report_paths: "**/*.junit.xml"
          comment: false
